// C++

class Solution {
public:
    int minimumTotal(vector<vector<int>>& triangle) {
        vector<int> sum = triangle[triangle.size() - 1];
        for (int i = triangle.size() - 1; i >= 1; i--)
            for (int j = 0; j < i; j++)
                sum[j] = triangle[i - 1][j] + min(sum[j], sum[j + 1]);
        return sum[0];
    }
};

———————————————————————————————————————————————————————————————

// Java

class Solution {
    public int minimumTotal(List<List<Integer>> triangle) {
        List<Integer> sum = triangle.get(triangle.size() - 1);
        for (int i = triangle.size() - 1; i >= 1; i--)
            for (int j = 0; j < i; j++)
                sum.set(j, triangle.get(i - 1).get(j) + Math.min(sum.get(j), sum.get(j + 1)));
        return sum.get(0);
    }
}
