// C++

class Solution {
public:
    bool isPalindrome(string s) {
        int l = 0, r = s.length() - 1;
        while (l < r){
            while (l < r && !isalpha(s[l]) && !isdigit(s[l])) l++;
            while (l < r && !isalpha(s[r]) && !isdigit(s[r])) r--;
            if (tolower(s[l]) != tolower(s[r])) return false;
            l++;
            r--;
        }
        return true;
    }
};

———————————————————————————————————————————————————————————————

// Java

class Solution {
    public boolean isPalindrome(String s) {
        int l = 0, r = s.length() - 1;
        while (l < r){
            while (l < r && !Character.isLetter(s.charAt(l)) && !Character.isDigit(s.charAt(l))) l++;
            while (l < r && !Character.isLetter(s.charAt(r)) && !Character.isDigit(s.charAt(r))) r--;
            String s1 = "" + s.charAt(l), s2 = "" + s.charAt(r);
            if (!(s1.toLowerCase().equals(s2.toLowerCase()))) return false;
            l++;
            r--;
        }
        return true;
    }
}
