// C++

class Solution {
public:
    int romanToInt(string s) {
        map<string, int> romanToNum = {{"M", 1000}, {"CM", 900}, {"D", 500}, {"CD", 400},
                                      {"C", 100}, {"XC", 90}, {"L", 50}, {"XL", 40}, {"X", 10},
                                      {"IX", 9}, {"V", 5}, {"IV", 4}, {"I", 1}};
        int index = 0, res = 0;
        while (index < s.length() - 1){
            string s1 = "", s2 = "";
            s1 += s[index];
            s2 += s1 + s[index + 1];
            if (romanToNum.find(s2) != romanToNum.end()){
                res += romanToNum[s2];
                index += 2;
            }
            else{
                res += romanToNum[s1];
                index++;
            }
        }
        if (index == s.length() - 1){
            string str = "";
            str += s[index];
            res += romanToNum[str];
        }
        return res;
    }
};

———————————————————————————————————————————————————————————————

// Java

class Solution {
    public int romanToInt(String s) {
        Map<String, Integer> romanToNum = new HashMap<>();
        romanToNum.put("M", 1000);
        romanToNum.put("CM", 900);
        romanToNum.put("D", 500);
        romanToNum.put("CD", 400);
        romanToNum.put("C", 100);
        romanToNum.put("XC", 90);
        romanToNum.put("L", 50);
        romanToNum.put("XL", 40);
        romanToNum.put("X", 10);
        romanToNum.put("IX", 9);
        romanToNum.put("V", 5);
        romanToNum.put("IV", 4);
        romanToNum.put("I", 1);
        int index = 0, res = 0;
        while (index < s.length() - 1){
            String s1 = "", s2 = "";
            s1 += s.charAt(index);
            s2 += s1 + s.charAt(index + 1);
            if (romanToNum.containsKey(s2)){
                res += romanToNum.get(s2);
                index += 2;
            }
            else{
                res += romanToNum.get(s1);
                index++;
            }
        }
        if (index == s.length() - 1){
            String str = "";
            str += s.charAt(index);
            res += romanToNum.get(str);
        }
        return res;
    }
};
