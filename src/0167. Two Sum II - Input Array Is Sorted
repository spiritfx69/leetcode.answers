// C++

class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
        int l = 0, r = numbers.size() - 1;
        while (l < r){
            if (numbers[l] + numbers[r] == target) return {l + 1, r + 1};
            else if (numbers[l] + numbers[r] < target) l++;
            else r--;
        }
        return {-1, -1};
    }
};

———————————————————————————————————————————————————————————————

// Java

class Solution {
    public int[] twoSum(int[] numbers, int target) {
        int[] pos = new int[2];
        int l = 0, r = numbers.length - 1;
        while (l < r){
            if (numbers[l] + numbers[r] == target){
                pos[0] = l + 1;
                pos[1] = r + 1;
                return pos;
            }
            else if (numbers[l] + numbers[r] < target) l++;
            else r--;
        }
        pos[0] = -1;
        pos[1] = -1;
        return pos;
    }
}
