// C++

class Solution {
public:
    int jump(vector<int>& nums) {
        int j = 0, end = 0, far = 0;
        for (int i = 0; i < nums.size() - 1; i++){
            far = max(i + nums[i], far);
            if (i == end){
                j++;
                end = far;
            }
        }
        return j;
    }
};

———————————————————————————————————————————————————————————————

// Java

class Solution {
    public int jump(int[] nums) {
        int j = 0, end = 0, far = 0;
        for (int i = 0; i < nums.length - 1; i++){
            far = Math.max(i + nums[i], far);
            if (i == end){
                j++;
                end = far;
            }
        }
        return j;
    }
}
